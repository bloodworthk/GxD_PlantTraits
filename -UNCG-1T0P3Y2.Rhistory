rename(Season=season) %>%
rename(comments_lab=comments) %>%
rename(date_lab=date) %>%
rename(people_lab=personelle) %>%
#removing genus species and season from this dataframe to avoid spelling issues and inconsistancies with data entered
dplyr::select(-genus_species,-Season)
Dry_Traits<-read.csv("DxG_Plant_Traits/2022_DxG_DRYLabTraits_ALL.csv") %>%
rename(DxG_block=Block) %>%
rename(paddock=Grazing_Paddock) %>%
rename(species_code=Species) %>%
dplyr::select(-Barcode_Scan,-Year,-comments)
Dry_Traits_Biomass<-subset(Dry_Traits,Biomass_Type=="B") %>%
rename(Dry_Biomass_min_Leaf_g=dry_weight_g) %>%
dplyr::select(-Biomass_Type)
Dry_Traits_Leaf<-subset(Dry_Traits,Biomass_Type=="L") %>%
rename(Dry_Leaf_Weight_g=dry_weight_g) %>%
dplyr::select(-Biomass_Type)
#merge trait dataframes
Traits<-Field_Traits %>%
left_join(Lab_Traits) %>%
left_join(Dry_Traits_Biomass) %>%
left_join(Dry_Traits_Leaf)
#Trait Database
#Trait_Database<-read_csv("DxG_Plant_Traits/sCoRRE categorical trait data_11302021.csv")
#Species Comp Data
FK_SpComp_2018<-read.csv("DxG_Plant_Traits/DxG_spcomp_FK_2018.csv")
FK_SpComp_2018$plot<-as.factor(FK_SpComp_2018$plot)
FK_SpComp_2019<-read.csv("DxG_Plant_Traits/DxG_spcomp_FK_2019.csv")
FK_SpComp_2020<-read.csv("DxG_Plant_Traits/DxG_spcomp_FK_2020.csv")
FK_SpComp_2021<-read.csv("DxG_Plant_Traits/DxG_spcomp_FK_2021.csv")
FK_SpComp_2022<-read.csv("DxG_Plant_Traits/DxG_spcomp_FK_2022.csv")
TB_SpComp_2018<-read.csv("DxG_Plant_Traits/DxG_spcomp_TB_2018.csv")
TB_SpComp_2019<-read.csv("DxG_Plant_Traits/DxG_spcomp_TB_2019.csv")
TB_SpComp_2020<-read.csv("DxG_Plant_Traits/DxG_spcomp_TB_2020.csv")
TB_SpComp_2021<-read.csv("DxG_Plant_Traits/DxG_spcomp_TB_2021.csv")
TB_SpComp_2022<-read.csv("DxG_Plant_Traits/DxG_spcomp_TB_2022.csv")
#Plot Data
plot_layoutK<-read.csv("DxG_Plant_Traits/GMDR_site_plot_metadata.csv") %>%
dplyr::select(site,block,paddock,plot,rainfall_reduction,drought,grazing_category,grazing_treatment,livestock_util_2019,livestock_util_2020,livestock_util_2021)
plot_layoutK$plot<-as.factor(plot_layoutK$plot)
#Soil moisture data  - bring in and keep only what we need for this study and take average SM data for all months
SM_data<-read.csv("DxG_Plant_Traits/SM_FK_TB_2019-2021.csv") %>%
group_by(Site,Year,Block,Paddock,Plot,Drought,Grazing) %>%
summarise(Avg_SM=mean(Soil_Moisture,na.rm = T)) %>%
ungroup()
#### Clean Up Species Comp Data and Calculate Relative Cover ####
#get dataframe with just total cover per plot for each year
#FK - 2018
Aerial_Cover_2018_FK<-FK_SpComp_2018 %>%
filter(aerial_basal!="Basal")
#Create Long dataframe from wide dataframe
Long_Cov_2018_FK<-gather(Aerial_Cover_2018_FK,key="species","cover",18:117) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("Oenotherea.suffrutescens.1","STANDING.DEADArtemisia.tridentata","STANDING.DEAD.Bromus.arvensis","STANDING.DEAD.Bromus.tectorum","STANDING.DEAD.Logfia.arvensis","STANDING.DEAD.Pascopyrum.smithii","CRCE.LELU.Penstemon.sp","Oenothera.","Unknown..7.baby.guara.","UNKN8.basal.rosette.lancroiati","Unk..3.Basal.Rosette","Unk..3.soft.point.leaf.KW.photo","Unkn..10.small.linear.leaf.KW.photo","Oneothera.n.","Rock","Moss.Lichen.Bogr.overlap")) %>%
na.omit(cover) %>%
filter(cover!=0)
#Calculate Relative Cover
Relative_Cover_2018_FK<-Long_Cov_2018_FK%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100) %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2018_FK$plot<-as.factor(Relative_Cover_2018_FK$plot)
#FK - 2019
#get dataframe with just total cover per plot
Total_Cover_2019_FK<-FK_SpComp_2019%>%
#only keep added total
filter(!is.na(genus_species)) %>%
filter(genus_species!="") %>%
group_by(block,plot) %>%
summarise(Total_Cover=sum(aerial_cover,na.rm = T)) %>%
ungroup()
#make dataframe with necessary information for relative cover calculation
Species_Cover_2019_FK<-FK_SpComp_2019 %>%
#take out all 'species' that are not actually plant species
filter(!is.na(genus_species)) %>%
filter(genus_species!="") %>%
filter(!genus_species %in% c("Added_Total","Estimated_Total" ,"Rock","Litter", "Bare Ground","overlap","Overlap", "Dung","ASER_Like_Woody","Lichen","Moss", "silver_stuff_unk3", "Skinny_leaf_fuzzy_bottom","oenothera?_basal_rossette","dead_mustard_unk","oenothera?_basal_rossetta","Oenothera_waxy_leaves","Basal_rosette","Mushroom")) %>%
rename(Species_Cover="aerial_cover") %>%
dplyr::select(-observers,-date)
#Calculate Relative Cover
Relative_Cover_2019_FK<-Species_Cover_2019_FK%>%
#Make a new column named "Treatment"
mutate(Treatment=paste(block,plot,sep="_"))%>%
#Add Total_Cover data into the Relative_Cover data sheet
left_join(Total_Cover_2019_FK)%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(Species_Cover/Total_Cover)*100) %>%
dplyr::select(-Species_Cover,-basal_cover,-Total_Cover) %>%
mutate(Relative_Cover=replace_na(Relative_Cover,0)) %>%
mutate(year=2019)  %>%
rename(species="genus_species") %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2019_FK$plot<-as.factor(Relative_Cover_2019_FK$plot)
#FK - 2020
#get dataframe with just total cover per plot
Total_Cover_2020_FK<-FK_SpComp_2020%>%
#only keep added total
filter(!is.na(genus_species)) %>%
filter(genus_species!="") %>%
group_by(block,plot) %>%
summarise(Total_Cover=sum(aerial_cover,na.rm = T)) %>%
ungroup()
#make dataframe with necessary information for relative cover calculation
Species_Cover_2020_FK<-FK_SpComp_2020 %>%
#take out all 'species' that are not actually plant species
filter(!is.na(genus_species)) %>%
filter(genus_species!="") %>%
filter(!genus_species %in% c("Added_total","Estimated_total" ,"Rock","Litter", "Bareground","overlap","Overlap", "Dung","ASER_Like_Woody","Lichen","Moss", "silver_stuff_unk3", "Skinny_leaf_fuzzy_bottom","oenothera?_basal_rossette","dead_mustard_unk","oenothera?_basal_rossetta","Oenothera_waxy_leaves","Basal_rosette","Mushroom","basal_aster_KW_pic_unknown","lanceolate_KW_pic_unknown","Antennaria_spp_unknown","basal_rosette_2020_KW_pic_unknown","Lithospermum_KW_pic_unknown","long_pods_no_leaves_KW_pic_unknown", "Artemisia_look_alike_no_smell_KW_pic_unknown","Astragalus_KW_pic_unknown","flat_spikelet_panicle_KW_pic_unknown","Antennaria_KW_pic_unknown")) %>%
rename(Species_Cover="aerial_cover") %>%
dplyr::select(-observers,-date)
#Calculate Relative Cover
Relative_Cover_2020_FK<-Species_Cover_2020_FK%>%
#Make a new column named "Treatment"
mutate(Treatment=paste(block,plot,sep="_"))%>%
#Add Total_Cover data into the Relative_Cover data sheet
left_join(Total_Cover_2020_FK)%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(Species_Cover/Total_Cover)*100) %>%
dplyr::select(-Species_Cover,-basal_cover,-Total_Cover) %>%
mutate(Relative_Cover=replace_na(Relative_Cover,0)) %>%
mutate(year=2020) %>%
rename(species="genus_species") %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2020_FK$plot<-as.factor(Relative_Cover_2020_FK$plot)
#FK - 2021
Aerial_Cover_2021_FK<-FK_SpComp_2021 %>%
filter(aerial_basal!="basal")
#Create Long dataframe from wide dataframe
Long_Cov_2021_FK<-gather(Aerial_Cover_2021_FK,key="species","cover",20:61) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("Poa_diseased_Kwpic.","Linear_leaf_hairy_red_stem_KWpic.")) %>%
na.omit(cover) %>%
filter(cover!=0)
#Calculate Relative Cover
Relative_Cover_2021_FK<-Long_Cov_2021_FK%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100) %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2021_FK$plot<-as.factor(Relative_Cover_2021_FK$plot)
#FK - 2022
Aerial_Cover_2022_FK<-FK_SpComp_2022 %>%
filter(aerial_basal!="basal")
#Create Long dataframe from wide dataframe
Long_Cov_2022_FK<-gather(Aerial_Cover_2022_FK,key="species","cover",18:68) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("basal.rosette","final_total","final_total_excel","Lygo.deomia","Lygo.deomia.1")) %>%
na.omit(cover) %>%
filter(cover!=0)
#Calculate Relative Cover
Relative_Cover_2022_FK<-Long_Cov_2022_FK%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100) %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2022_FK$plot<-as.factor(Relative_Cover_2022_FK$plot)
#TB- 2018
Aerial_Cover_2018_TB<-TB_SpComp_2018 %>%
filter(aerial_basal!="Basal")
#Create Long dataframe from wide dataframe
Long_Cov_2018_TB<-gather(Aerial_Cover_2018_TB,key="species","cover",18:113) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("Oenotherea.suffrutescens.1", "STANDING.DEADArtemisia.tridentata","STANDING.DEAD.Bromus.arvensis","STANDING.DEAD.Bromus.tectorum","STANDING.DEAD.Logfia.arvensis","STANDING.DEAD.Pascopyrum.smithii",  "CRCE.LELU.Penstemon.sp","Oenothera.","Unknown..7.baby.guara.","UNKN8.basal.rosette.lancroiati","Unk..3.Basal.Rosette","Unk..3.soft.point.leaf.KW.photo","Unkn..10.small.linear.leaf.KW.photo")) %>%
na.omit(cover) %>%
filter(cover!=0)
#Calculate Relative Cover
Relative_Cover_2018_TB<-Long_Cov_2018_TB%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100)%>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2018_TB$plot<-as.factor(Relative_Cover_2018_TB$plot)
#TB- 2019
Aerial_Cover_2019_TB<-TB_SpComp_2019 %>%
filter(aerial_basal!="Basal")
#Create Long dataframe from wide dataframe
Long_Cov_2019_TB<-gather(Aerial_Cover_2019_TB,key="species","cover",18:114) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("STANDING.DEADArtemisia.tridentata","STANDING.DEAD.Bromus.arvensis","STANDING.DEAD.Bromus.tectorum","STANDING.DEAD.Logfia.arvensis","STANDING.DEAD.Pascopyrum.smithii","Penstemon.sp.","CRCE.LELU.Penstemon.sp","Oenothera.","Unknown..7.baby.guara.","UNKN8.basal.rosette.lancroiati","Unk..3.Basal.Rosette","Unk..3.soft.point.leaf.KW.photo","Unkn..10.small.linear.leaf.KW.photo")) %>%
na.omit(cover) %>%
filter(cover!=0)
Long_Cov_2019_TB$cover<-as.numeric(Long_Cov_2019_TB$cover)
#Calculate Relative Cover
Relative_Cover_2019_TB<-Long_Cov_2019_TB%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100)%>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2019_TB$plot<-as.factor(Relative_Cover_2019_TB$plot)
#TB- 2020
Aerial_Cover_2020_TB<-TB_SpComp_2020 %>%
filter(aerial_basal!="Basal")
#Create Long dataframe from wide dataframe
Long_Cov_2020_TB<-gather(Aerial_Cover_2020_TB,key="species","cover",18:114) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("STANDING.DEADArtemisia.tridentata","STANDING.DEAD.Bromus.arvensis","STANDING.DEAD.Bromus.tectorum","STANDING.DEAD.Logfia.arvensis","STANDING.DEAD.Pascopyrum.smithii","Penstemon.sp.","CRCE.LELU.Penstemon.sp","Oenothera.","Unknown..7.baby.guara.","UNKN8.basal.rosette.lancroiati","Unk..3.Basal.Rosette","Unk..3.soft.point.leaf.KW.photo","Unkn..10.small.linear.leaf.KW.photo")) %>%
na.omit(cover) %>%
filter(cover!=0) %>%
filter(cover!="<0.5")
Long_Cov_2020_TB$cover<-as.numeric(Long_Cov_2020_TB$cover)
#Calculate Relative Cover
Relative_Cover_2020_TB<-Long_Cov_2020_TB%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100)%>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2020_TB$plot<-as.factor(Relative_Cover_2020_TB$plot)
#TB- 2021
Aerial_Cover_2021_TB<-TB_SpComp_2021 %>%
filter(aerial_basal!="basal")
#Create Long dataframe from wide dataframe
Long_Cov_2021_TB<-gather(Aerial_Cover_2021_TB,key="species","cover",21:79) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("Unk_baby_forb_opp.")) %>%
na.omit(cover) %>%
filter(cover!=0) %>%
filter(cover!="<0.5")
#Calculate Relative Cover
Relative_Cover_2021_TB<-Long_Cov_2021_TB%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100)%>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2021_TB$plot<-as.factor(Relative_Cover_2021_TB$plot)
#TB - 2022
Aerial_Cover_2022_TB<-TB_SpComp_2022 %>%
filter(aerial_basal!="basal")
#Create Long dataframe from wide dataframe
Long_Cov_2022_TB<-gather(Aerial_Cover_2022_TB,key="species","cover",18:85) %>%
dplyr::select(year,site,plot,added_total_excel,species,cover) %>%
filter(!species %in% c("basal.rosette","final_total","final_total_excel","Pointy.petals..Rhear.leaves","Flesur.linear.leaves.in.bunch..KW.pic.","Sponge.leaf..KW.pic....FRUN.PIOP.46......")) %>%
na.omit(cover) %>%
filter(cover!=0)
#Calculate Relative Cover
Relative_Cover_2022_TB<-Long_Cov_2022_TB%>%
#In the data sheet Relative_Cover, add a new column called "Relative_Cover", in which you divide "cover" by "Total_Cover"
mutate(Relative_Cover=(cover/added_total_excel)*100) %>%
dplyr::select(year,site,plot,species,Relative_Cover)
#make plot a factor not an integer
Relative_Cover_2022_TB$plot<-as.factor(Relative_Cover_2022_TB$plot)
####Merge all TB and FK Data Frames together
Species_Comp_RelCov_All<-
full_join(Relative_Cover_2018_TB,Relative_Cover_2019_TB) %>%
full_join(Relative_Cover_2020_TB) %>%
full_join(Relative_Cover_2021_TB) %>%
full_join(Relative_Cover_2022_TB) %>%
full_join(Relative_Cover_2018_FK) %>%
full_join(Relative_Cover_2019_FK) %>%
full_join(Relative_Cover_2020_FK) %>%
full_join(Relative_Cover_2021_FK) %>%
full_join(Relative_Cover_2022_FK) %>%
mutate(Genus_Species=ifelse(species=="Oenothera_suffruticosa","Oenothera.suffrutescens",ifelse(species=="Oenotherea.suffrutescens","Oenothera.suffrutescens",ifelse(species=="OESU","Oenothera.suffrutescens",ifelse(species=="OPPO","Opuntia.polyacantha",ifelse(species=="Opuntia_polycantha","Opuntia.polyacantha",ifelse(species=="Pascopyrum_smithii","Pascopyrum.smithii",ifelse(species=="PASM","Pascopyrum_smithii",ifelse(species=="Pediomelum_esculenta","Pediomelum.esculentum",ifelse(species=="pediomelum_esculentum","Pediomelum.esculentum",ifelse(species=="Pediomelum_esculentum","Pediomelum.esculentum",ifelse(species=="PHHO","Phlox.hoodii",ifelse(species=="Plantago_patagonica","Plantago.patagonica",ifelse(species=="PLPA","Plantago.patagonica",ifelse(species=="Poa_secunda","Poa.secunda",ifelse(species=="POSE","Poa.secunda",ifelse(species=="PSTE","Psoralidium.tenuiflorum",ifelse(species=="SPCO","Sphaeralcea.coccinea",ifelse(species=="Sphaeralcea_coccinea","Sphaeralcea.coccinea",ifelse(species=="Sporobolus_cryptandrus","Sporobolus.cryptandrus",ifelse(species=="TAOF","Taraxacum.officinale",ifelse(species=="Taraxacum_officinale","Taraxacum.officinale",ifelse(species=="Tragopogon_dubius","Tragopogon.dubius",ifelse(species=="TRDU","Tragopogon.dubius",ifelse(species=="VIAM","Vicia.americana",ifelse(species=="Vicia_americana","Vicia.americana",ifelse(species=="Vulpia_octoflora","Vulpia.octoflora",ifelse(species=="VUOC","Vulpia.octoflora",ifelse(species=="ALDE","Alyssum.desertorum",ifelse(species=="Allysum_desetorum","Alyssum.desertorum",ifelse(species=="ALTE","Allium.textile",ifelse(species=="Alyssum_desertorum","Alyssum.desertorum",ifelse(species=="Alyssum.desertorum","Alyssum.desertorum",ifelse(species=="Androsace_occidentalis","Androsace.occidentalis",ifelse(species=="ARCA","Artemisia.cana",ifelse(species=="ARDR","Artemisia.dracunculus",ifelse(species=="ARFR","Artemisia.frigida",ifelse(species=="Aristida_purpurea","Aristida.purpurea",ifelse(species=="ARPU","Aristida.purpurea",ifelse(species=="Artemisia_cana","Artemisia.cana",ifelse(species=="Artemisia_dracunculus","Artemisia.dracunculus",ifelse(species=="Artemisia_frigida","Artemisia.frigida",ifelse(species=="ARTR","Artemisia.tridentata",ifelse(species=="BODA","Bouteloua.dactyloides",ifelse(species=="BOGR" ,"Bouteloua.gracilis",ifelse(species=="Bouteloua_dactyloides","Bouteloua.dactyloides",ifelse(species=="Bouteloua_gracilis","Bouteloua.gracilis",ifelse(species=="BRAR","Bromus.arvensis",ifelse(species=="Bromus_arvensis","Bromus.arvensis",ifelse(species=="Bromus_tectorum","Bromus.tectorum",species)))))))))))))))))))))))))))))))))))))))))))))))))) %>%
mutate(Genus_Species_2=ifelse(Genus_Species=="BRTE","Bromus.tectorum",ifelse(Genus_Species=="CADU","Carex.duriuscula",ifelse(Genus_Species=="CAFI","Carex.filifolia",ifelse(Genus_Species=="Carex_durescula","Carex.duriuscula",ifelse(Genus_Species=="Carex_duriuscula","Carex.duriuscula",ifelse(Genus_Species=="conyza_canadensis","Conyza.canadensis",ifelse(Genus_Species=="Conyza_canadensis","Conyza.canadensis",ifelse(Genus_Species=="Coryphanthus_vivipara","Coryphantha.viviparus",ifelse(Genus_Species=="Coryphantha_viviparus","Coryphantha.viviparus",ifelse(Genus_Species=="COVI","Coryphantha.viviparus",ifelse(Genus_Species=="DEPI","Descurainia.pinnata",ifelse(Genus_Species=="ERHO","Eremogone.hookeri",ifelse(Genus_Species=="GUSA","Gutierrezia.sarothrae",ifelse(Genus_Species=="HECO","Hesperostipa.comata",ifelse(Genus_Species=="Hesperostipa_comata","Hesperostipa.comata",ifelse(Genus_Species=="Hedeoma_hispida","Hedeoma.hispida",ifelse(Genus_Species=="Koeleria_macrantha","Koeleria.macrantha",ifelse(Genus_Species=="KOMA","Koeleria.macrantha",ifelse(Genus_Species=="Lithospermum_incisum","Lithospermum.incisum",ifelse(Genus_Species=="LOAR","Logfia.arvensis",ifelse(Genus_Species=="Logfia_arvensis","Logfia.arvensis",ifelse(Genus_Species=="LYJU","Lygodesmia.juncea",ifelse(Genus_Species=="MUDI","Musineon.divaricatum",ifelse(Genus_Species=="NAVI","Nassella.viridula",ifelse(Genus_Species=="Oenothera_suffrutescens","Oenothera.suffrutescens",ifelse(Genus_Species=="oenothera_suffruticosa","Oenothera.suffrutescens",ifelse(Genus_Species=="Carex_filifolia","Carex.filifolia", ifelse(Genus_Species=="Liatrus_punctata","Liatris.punctata",ifelse(Genus_Species== "LOFO","Lomatium.foeniculaceum",ifelse(Genus_Species=="Pascopyrum_smithii","Pascopyrum.smithii",ifelse(Genus_Species=="Lygodesmia_juncea","Lygodesmia.juncea",ifelse(Genus_Species=="Linum_rigidum","Linum.rigidum",ifelse(Genus_Species=="Asclepias_stenophylla","Asclepias.stenophylla",ifelse(Genus_Species=="Lepidium_densiflorum","Lepidium.densiflorum",ifelse(Genus_Species=="Astragalus_gracilis","Astragalus.gracilis",ifelse(Genus_Species== "Euphorbia_nutans","Euphorbia.nutans",ifelse(Genus_Species=="Liatris_punctata","Liatris.punctata",ifelse(Genus_Species=="Astragalus_purshii","Astragalus.purshii",ifelse(Genus_Species=="Lactuca_serriola","Lactuca.serriola",ifelse(Genus_Species=="COLI","Collomia.linearis",Genus_Species))))))))))))))))))))))))))))))))))))))))) %>%
mutate(Genus_Species_3=ifelse(Genus_Species_2=="DRRE","Draba.reptans",ifelse(Genus_Species_2=="ANPA","Antennaria.parvifolia",ifelse(Genus_Species_2=="CAMI","Camelina.microcarpa",ifelse(Genus_Species_2=="ERCA.","Erigeron.canus",ifelse(Genus_Species_2=="ERPU","Erigeron.pumilus",ifelse(Genus_Species_2=="ERPU.","Erigeron.pumilus",ifelse(Genus_Species_2=="HEHI","Hedeoma.hispida",ifelse(Genus_Species_2=="LEDE","Lepidium.densiflorum",ifelse(Genus_Species_2=="LIIN","Lithospermum.incisum",ifelse(Genus_Species_2=="LIPU","Liatris.punctata",ifelse(Genus_Species_2=="MODI","Musineon.divaricatum",ifelse(Genus_Species_2=="MODI","Musineon.divaricatum",ifelse(Genus_Species_2=="MODI","Musineon.divaricatum",ifelse(Genus_Species_2=="NOCU","Nothocalais.cuspidata",ifelse(Genus_Species_2=="PEES","Pediomelum.esculentum",ifelse(Genus_Species_2=="PIOP","Picradeniopsis.oppositifolia",ifelse(Genus_Species_2=="POAV","Polygonum.aviculare",ifelse(Genus_Species_2=="VEPE","Veronica.peregrina", ifelse(Genus_Species_2=="ZIVE","Zigadenus.venenosus", ifelse(Genus_Species_2=="ANOC","Androsace.occidentalis", ifelse(Genus_Species_2=="ASGR","Astragalus.gracilis",ifelse(Genus_Species_2=="ASPU","Astragalus.purshii",ifelse(Genus_Species_2=="COCA","Conyza.canadensis",ifelse(Genus_Species_2=="LIRI","Linum.rigidum",ifelse(Genus_Species_2=="MAGR","Machaeranthera.grindelioides",ifelse(Genus_Species_2=="PEAL","Pediomelum.esculentum",ifelse(Genus_Species_2=="SPCR","Sporobolus.cryptandrus",ifelse(Genus_Species_2=="ASBI","Astragalus.bisulcatus",ifelse(Genus_Species_2=="CIUN","Cirsium.undulatum",ifelse(Genus_Species_2=="Coryphantha.viviparus","Coryphantha.vivipara",ifelse(Genus_Species_2=="ERDI","Erigeron.divergens.ochroleucus",ifelse(Genus_Species_2=="GUSA.1","Gutierrezia.sarothrae",Genus_Species_2))))))))))))))))))))))))))))))))) %>%
mutate(Genus_Species_Correct=ifelse(Genus_Species_3=="LEMO","Leucocrinum.montanum",ifelse(Genus_Species_3=="LOFO.1","Lomatium.foeniculaceum",ifelse(Genus_Species_3=="Oenotherea.suffrutescens.1","Oenothera.suffrutescens",ifelse(Genus_Species_3=="SCLA","Scorzonera.laciniata",ifelse(Genus_Species_3=="SCPA","Schedonnardus.paniculatus",ifelse(Genus_Species_3=="TROC","Tradescantia.occidentalis",ifelse(Genus_Species_3=="VINU","Viola.nuttallii",ifelse(Genus_Species_3=="PEAN","Penstamom.angus",ifelse(Genus_Species_3=="PHLO","Phlox.longifoli",ifelse(Genus_Species_3=="CHPR","Chenopudium.pratericola",ifelse(Genus_Species_3=="CRMI","Cryptans.minima",ifelse(Genus_Species_3=="DRNE","Draba.nemorosa",ifelse(Genus_Species_3=="MILI","Mirabilis.linearis",ifelse(Genus_Species_3=="OEAL","Oenothera.albicaulis",ifelse(Genus_Species_3=="OOMU","Oonopsis.multicaulis",Genus_Species_3)))))))))))))))) %>%
dplyr::select(-species,-Genus_Species,-Genus_Species_2,-Genus_Species_3)
#### Calculate top 90 % of each plot for each year ####
#sort dataframe by year, site, plot, and relative cover (from highest to lowest)
#Species_Cover_90_all<-Species_Comp_RelCov_All[order(Species_Comp_RelCov_All$year, Species_Comp_RelCov_All$site,Species_Comp_RelCov_All$plot,-Species_Comp_RelCov_All$Relative_Cover),]
#create a dataframe that groups by year, site, and plot and then calculates the cummulative sum of relative cover within each yearXsiteXplot
#Species_Cover_90_all<-Species_Cover_90_all %>%
#group_by(year,site,plot) %>%
#mutate(Total_Percent = cumsum(Relative_Cover)) %>%
#ungroup() %>%
#remove any species after the 90% threshold is met
#filter(Total_Percent<=93)
#Trait_Species_Unique<-Species_Cover_90_all %>%
#select(-Relative_Cover,-Total_Percent,-plot,-year) %>%
#unique()
#save as a csv
#write.csv(Trait_Species_Unique,"DxG_Plant_Traits/Trait_Species_FK_TB.csv", row.names = FALSE)
#### Clean up trait data ####
##make dataframes match up
#remove all NAs from height column to remove any plants not collected/measured but to avoid removing plants where percent green was not collected  by accident
Traits_Clean <- Traits [complete.cases(Traits[ , 6]),] %>%
filter(comments_lab!="not BRTE - did not measure, remove from data") %>%
filter(comments_lab!="maybe KOMA?") %>%
mutate(wet_leaf_weight_g=as.numeric(ifelse(wet_leaf_weight_g=="<0.0001","0.00001",ifelse(wet_leaf_weight_g=="0..0233",0.0233, wet_leaf_weight_g))))
#Changing ARTR to ARFR based on comments on lab traits
Traits_Clean[602, "genus_species"] <- "Artemisia_frigida"
Traits_Clean[602, "species_code"] <- "ARFR"
#changing LIPU to LIIN based on comments on lab traits
Traits_Clean[427, "genus_species"] <- "Lithospermum_incisum"
Traits_Clean[427, "species_code"] <- "LIIN"
#changing MUDI to PIOP based on comments on lab traits
Traits_Clean[249, "genus_species"] <- "Picradeniopsis_oppositifolia"
Traits_Clean[249, "species_code"] <- "PIOP"
#changing LIIN to LIPU based on comments on lab traits
Traits_Clean[504, "genus_species"] <- "Liatris_punctata"
Traits_Clean[504, "species_code"] <- "LIPU"
#changing KOMA to PASM based on comments on lab traits
Traits_Clean[475, "genus_species"] <- "Pascopyrum_smithii"
Traits_Clean[475, "species_code"] <- "PASM"
#Clean up leaf traits and calculate SLA and average traits by site
AverageTraits<-Traits_Clean %>%
mutate(total_flower_num=flower_heads+open_flowers) %>%
mutate(Dry_Leaf_Weight_g_update=ifelse(Dry_Leaf_Weight_g=="REWEIGH",NA,ifelse(Dry_Leaf_Weight_g=="<0.001",0.00005,ifelse(Dry_Leaf_Weight_g=="<0.0001",0.00005,ifelse(Dry_Leaf_Weight_g=="Empty",NA,ifelse(Dry_Leaf_Weight_g=="EMPTY",NA,ifelse(Dry_Leaf_Weight_g=="MISSING",NA,Dry_Leaf_Weight_g))))))) %>%
mutate(Dry_Biomass_min_Leaf_g_update=ifelse(Dry_Biomass_min_Leaf_g=="REWEIGH",NA,ifelse(Dry_Biomass_min_Leaf_g=="<0.001",0.00005,ifelse(Dry_Biomass_min_Leaf_g=="<0.0001",0.00005,ifelse(Dry_Biomass_min_Leaf_g=="Empty",NA,ifelse(Dry_Biomass_min_Leaf_g=="EMPTY",NA,ifelse(Dry_Biomass_min_Leaf_g=="MISSING",NA,Dry_Biomass_min_Leaf_g))))))) %>%
mutate(LDMC=as.numeric(Dry_Leaf_Weight_g_update)/wet_leaf_weight_g) %>%
mutate(Plant_Biomass=as.numeric(Dry_Leaf_Weight_g_update)+as.numeric(Dry_Biomass_min_Leaf_g_update)) %>%
group_by(Site,genus_species,species_code,Season,DxG_block) %>%
summarise(
Avg_height_cm=mean(height_cm),
Avg_biomass_g=mean(Plant_Biomass),
Avg_percent_green=mean(percent_green,na.rm=T),
Avg_emerging_leaves=mean(emerging_leaves),
Avg_developed_leaves=mean(developed_leaves),
Avg_scenesced_leaves=mean(scenesced_leaves,na.rm=T),
Avg_flower_heads=mean(flower_heads),
Avg_open_flowers=mean(open_flowers),
Avg_leaf_thickness=mean(leaf_thickness_.mm.),
Avg_flower_num=mean(total_flower_num),
Avg_LDMC=mean(LDMC)
) %>%
ungroup() %>%
#edit genus species to match species comp data
mutate(Genus_Species_2=ifelse(genus_species=="Allium_textile","Allium.textile",ifelse(genus_species=="Alyssum_desetorum","Alyssum.desertorum",ifelse(genus_species=="Antennaria_parvifolia","Antennaria.parvifolia",ifelse(genus_species=="Astragalus_bisulcatus","Astragalus.bisulcatus",ifelse(genus_species=="Bromus_arvensis","Bromus.arvensis",ifelse(genus_species=="Bromus_tectorum","Bromus.tectorum",ifelse(genus_species=="Carex_duriuscula","Carex.duriuscula",ifelse(genus_species=="Carex_filifolia","Carex.filifolia",ifelse(genus_species=="Cirsium_undulatum","Cirsium.undulatum",ifelse(genus_species=="Collomia_linearis","Collomia.linearis",ifelse(genus_species=="Descurainia_pinnata","Descurainia.pinnata",ifelse(genus_species=="Draba_reptans","Draba.reptans",ifelse(genus_species=="Eremogone_hookeri","Eremogone.hookeri",ifelse(genus_species=="Erigeron_canus","Erigeron.canus",ifelse(genus_species=="Erigeron_pumilus","Erigeron.pumilus",ifelse(genus_species=="Hedeoma_hispida","Hedeoma.hispida",ifelse(genus_species=="Hesperostipa_comata","Hesperostipa.comata",ifelse(genus_species=="Koeleria_macrantha","Koeleria.macrantha",ifelse(genus_species=="Lepidium_densiflorum","Lepidium.densiflorum",ifelse(genus_species=="Lithospermum_incisum","Lithospermum.incisum",ifelse(genus_species=="Logfia_arvensis","Logfia.arvensis",ifelse(genus_species=="Lomatium_foeniculaceum","Lomatium.foeniculaceum",ifelse(genus_species=="Musineon_divaricatum","Musineon.divaricatum",ifelse(genus_species=="Nassella_viridula","Nassella.viridula",ifelse(genus_species=="Nothocalais_cuspidate","Nothocalais.cuspidata",ifelse(genus_species=="Oenothera_suffrtescuns","Oenothera.suffrtescuns",ifelse(genus_species=="Pascopyrum_smithii","Pascopyrum.smithii",ifelse(genus_species=="Phlox_hoodia","Phlox.hoodii",ifelse(genus_species=="Picradeniopsis_oppositifolia","Picradeniopsis.oppositifolia",ifelse(genus_species=="Plantago_patagonica","Plantago.patagonica",ifelse(genus_species=="Poa_secunda","Poa.secunda",ifelse(genus_species=="Psoralidium_tenuiflorum","Psoralidium.tenuiflorum",genus_species))))))))))))))))))))))))))))))))) %>%
mutate(Genus_Species_Correct=ifelse(Genus_Species_2=="Sphaeralcea_coccinea","Sphaeralcea.coccinea",ifelse(Genus_Species_2=="Taraxacum_officinale","Taraxacum.officinale",ifelse(Genus_Species_2=="Tetraneuris_acaulis","Tetraneuris.acaulis",ifelse(Genus_Species_2=="Tragopogon_dubius","Tragopogon.dubius",ifelse(Genus_Species_2=="Vulpia_octoflora","Vulpia.octoflora",ifelse(Genus_Species_2=="Vicia_americana","Vicia.americana",ifelse(Genus_Species_2=="Elymus_elymoides","Elymus.elymoides",ifelse(Genus_Species_2=="Androsace_occidentalis","Androsace.occidentalis",ifelse(Genus_Species_2=="Astragalus_purshii","Astragalus.purshii",ifelse(Genus_Species_2=="Astragalus_gracilis","Astragalus.gracilis",ifelse(Genus_Species_2=="Conyza_canadensis","Conyza.canadensis",ifelse(Genus_Species_2=="Liatris_punctata","Liatris.punctata",ifelse(Genus_Species_2=="Lydogesmia_juncea","Lygodesmia.juncea",ifelse(Genus_Species_2=="Pediomelum_esculentum","Pediomelum.esculentum",ifelse(Genus_Species_2=="Linum_rigidum","Linum.rigidum",ifelse(Genus_Species_2=="Aristida_purpurea","Aristida.purpurea",ifelse(Genus_Species_2=="Artemisia_frigida","Artemisia.frigida",ifelse(Genus_Species_2=="Artemisia_tridentata","Artemisia.tridentata",ifelse(Genus_Species_2=="Bouteloua_gracilis","Bouteloua.gracilis",ifelse(Genus_Species_2=="Gutierrezia_sarothrae","Gutierrezia.sarothrae",ifelse(Genus_Species_2=="Artemisia_cana","Artemisia.cana",ifelse(Genus_Species_2=="Artemisia_dracunculus","Artemisia.dracunculus",ifelse(Genus_Species_2=="Bouteloua_dactyloides","Bouteloua.dactyloides",ifelse(Genus_Species_2=="Sporobolus_cryptandrus","Sporobolus.cryptandrus",Genus_Species_2))))))))))))))))))))))))) %>%
dplyr::select(-genus_species,-Genus_Species_2)
SM_data_Update<-SM_data %>%
dplyr::select(Site,Year,Plot,Drought,Grazing,Avg_SM) %>%
rename(site=Site) %>%
rename(year=Year) %>%
rename(rainfall_reduction=Drought) %>%
rename(grazing_category=Grazing) %>%
rename(plot=Plot) %>%
mutate(plot=as.factor(plot))
CWM_Collected_Data<- Species_Comp_RelCov_All %>%
left_join(plot_layoutK) %>%
left_join(SM_data_Update) %>%
rename(Site=site) %>%
filter(!is.na(Relative_Cover)) %>%
filter(Relative_Cover!=0) %>%
left_join(AverageTraits) %>%
group_by(year,Site,plot,block,paddock,rainfall_reduction,drought,grazing_category,grazing_treatment,Avg_SM) %>%
#calculate CWM using tidyr function, removing NAs for now until more data are collected
summarise(
Height_CWM=weighted.mean(Avg_height_cm,Relative_Cover,na.rm = T),
#Biomass_CWM=weighted.mean(Avg_biomass_mg,Relative_Cover,na.rm=T),
PercentGreen_CWM=weighted.mean(Avg_percent_green,Relative_Cover,na.rm=T),
EmergingLeaves_CWM=weighted.mean(Avg_emerging_leaves,Relative_Cover,na.rm=T),
DevelopedLeaves_CWM=weighted.mean(Avg_developed_leaves,Relative_Cover,na.rm=T),
ScenescedLeaves_CWM=weighted.mean(Avg_scenesced_leaves,Relative_Cover,na.rm=T),
FlowerHeads_CWM=weighted.mean(Avg_flower_heads,Relative_Cover,na.rm=T),
OpenFlowers_CWM=weighted.mean(Avg_open_flowers,Relative_Cover,na.rm=T),
LeafThickness_CWM=weighted.mean(Avg_leaf_thickness,Relative_Cover,na.rm=T),
FlowerNum_CWM=weighted.mean(Avg_flower_num,Relative_Cover,na.rm=T),
LDMC_CWM=weighted.mean(Avg_LDMC,Relative_Cover,na.rm=T),
Biomass_CWM=weighted.mean(Avg_biomass_g,Relative_Cover,na.rm=T)
) %>%
ungroup() %>%
mutate(Rainfall_reduction_cat=as.factor(rainfall_reduction)) %>%
mutate(Trtm=paste(Rainfall_reduction_cat,grazing_treatment,sep = "_")) %>%
mutate(Grazing_2020=ifelse(grazing_category=="MMMMM","medium",ifelse(grazing_category=="HHMMM","high",ifelse(grazing_category=="MLLMM","medium",grazing_category))))
#### PCAs ####
#Create seperate dataframes for each site and year for PCAs
CWM_Collected_Data_FK_19<-CWM_Collected_Data %>%
filter(Site=="FK" & year==2019)
CWM_Collected_Data_FK_20<-CWM_Collected_Data %>%
filter(Site=="FK" & year==2020)
CWM_Collected_Data_FK_21<-CWM_Collected_Data %>%
filter(Site=="FK" & year==2021)
CWM_Collected_Data_FK_22<-CWM_Collected_Data %>%
filter(Site=="FK" & year==2022)
CWM_Collected_Data_TB_19<-CWM_Collected_Data %>%
filter(Site=="TB" & year==2019) %>%
na.omit(Biomass_CWM)
CWM_Collected_Data_TB_20<-CWM_Collected_Data %>%
filter(Site=="TB" & year==2020) %>%
na.omit(Biomass_CWM) %>%
na.omit(LDMC_CWM)
CWM_Collected_Data_TB_21<-CWM_Collected_Data %>%
filter(Site=="TB" & year==2021) %>%
filter(!is.na(Biomass_CWM))
CWM_Collected_Data_TB_22<-CWM_Collected_Data %>%
filter(Site=="TB" & year==2022)
#### PCA for FK 2019 ####
PCA_FK_19<-prcomp(CWM_Collected_Data_FK_19[,11:21],scale=TRUE)
PCA_FK_19
summary(PCA_FK_19)
axes_FK_19 <- predict(PCA_FK_19, newdata = CWM_Collected_Data_FK_19)
head(axes_FK_19, 4)
#put PCA axes with site and plot #
PCA_FK_19_meta<-cbind(CWM_Collected_Data_FK_19,axes_FK_19)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_FK_19 <- get_pca_var(PCA_FK_19)
var_FK_19
head(var_FK_19$contrib, 13)
#### PCA for FK 2020 ####
PCA_FK_20<-prcomp(CWM_Collected_Data_FK_20[,11:21],scale=TRUE)
PCA_FK_20
summary(PCA_FK_20)
axes_FK_20 <- predict(PCA_FK_20, newdata = CWM_Collected_Data_FK_20)
head(axes_FK_20, 4)
#put PCA axes with site and plot #
PCA_FK_20_meta<-cbind(CWM_Collected_Data_FK_20,axes_FK_20)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_FK_20 <- get_pca_var(PCA_FK_20)
var_FK_20
head(var_FK_20$contrib, 12)
#### PCA for FK 2021 ####
PCA_FK_21<-prcomp(CWM_Collected_Data_FK_21[,11:21],scale=TRUE)
PCA_FK_21
summary(PCA_FK_21)
axes_FK_21 <- predict(PCA_FK_21, newdata = CWM_Collected_Data_FK_21)
head(axes_FK_21, 4)
#put PCA axes with site and plot #
PCA_FK_21_meta<-cbind(CWM_Collected_Data_FK_21,axes_FK_21)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_FK_21 <- get_pca_var(PCA_FK_21)
var_FK_21
head(var_FK_21$contrib, 12)
#### PCA for FK 2022 ####
PCA_FK_22<-prcomp(CWM_Collected_Data_FK_22[,11:21],scale=TRUE)
PCA_FK_22
summary(PCA_FK_22)
axes_FK_22 <- predict(PCA_FK_22, newdata = CWM_Collected_Data_FK_22)
head(axes_FK_22, 4)
#put PCA axes with site and plot #
PCA_FK_22_meta<-cbind(CWM_Collected_Data_FK_22,axes_FK_22)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_FK_22 <- get_pca_var(PCA_FK_22)
var_FK_22
head(var_FK_22$contrib, 12)
#### PCA for TB 2019 ####
PCA_TB_19<-prcomp(CWM_Collected_Data_TB_19[,11:21],scale=TRUE)
PCA_TB_19
summary(PCA_TB_19)
axes_TB_19 <- predict(PCA_TB_19, newdata = CWM_Collected_Data_TB_19)
head(axes_TB_19, 4)
#put PCA axes with site and plot #
PCA_TB_19_meta<-cbind(CWM_Collected_Data_TB_19,axes_TB_19)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_TB_19 <- get_pca_var(PCA_TB_19)
var_TB_19
head(var_TB_19$contrib, 12)
#### PCA for TB 2020 ####
PCA_TB_20<-prcomp(CWM_Collected_Data_TB_20[,11:21],scale=TRUE)
PCA_TB_20
summary(PCA_TB_20)
axes_TB_20 <- predict(PCA_TB_20, newdata = CWM_Collected_Data_TB_20)
head(axes_TB_20, 4)
#put PCA axes with site and plot #
PCA_TB_20_meta<-cbind(CWM_Collected_Data_TB_20,axes_TB_20)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_TB_20 <- get_pca_var(PCA_TB_20)
var_TB_20
head(var_TB_20$contrib, 12)
#### PCA for TB 2021 ####
PCA_TB_21<-prcomp(CWM_Collected_Data_TB_21[,11:21],scale=TRUE)
PCA_TB_21
summary(PCA_TB_21)
axes_TB_21 <- predict(PCA_TB_21, newdata = CWM_Collected_Data_TB_21)
head(axes_TB_21, 4)
#put PCA axes with site and plot #
PCA_TB_21_meta<-cbind(CWM_Collected_Data_TB_21,axes_TB_21)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_TB_21 <- get_pca_var(PCA_TB_21)
var_TB_21
head(var_TB_21$contrib, 11)
#### PCA for TB 2022 ####
PCA_TB_22<-prcomp(CWM_Collected_Data_TB_22[,11:21],scale=TRUE)
PCA_TB_22
summary(PCA_TB_22)
axes_TB_22 <- predict(PCA_TB_22, newdata = CWM_Collected_Data_TB_22)
head(axes_TB_22, 4)
#put PCA axes with site and plot #
PCA_TB_22_meta<-cbind(CWM_Collected_Data_TB_22,axes_TB_22)%>%
select(plot,block,paddock,Rainfall_reduction_cat,grazing_treatment,Trtm,PC1,PC2)
#find contributions of CW traits to PCA axes #
var_TB_22 <- get_pca_var(PCA_TB_22)
var_TB_22
head(var_TB_22$contrib, 12)
autoplot(PCA_FK_19, data=CWM_Collected_Data_FK_19, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
#FK
PCA_FK_19_G<-autoplot(PCA_FK_19, data=CWM_Collected_Data_FK_19, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_FK_20<-autoplot(PCA_FK_20, data=CWM_Collected_Data_FK_20, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_FK_21<-autoplot(PCA_FK_21, data=CWM_Collected_Data_FK_21, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_FK_22<-autoplot(PCA_FK_22, data=CWM_Collected_Data_FK_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
#TB
PCA_TB_19<-autoplot(PCA_TB_19, data=CWM_Collected_Data_TB_19, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_TB_20<-autoplot(PCA_TB_20, data=CWM_Collected_Data_TB_20, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_TB_21<-autoplot(PCA_TB_21, data=CWM_Collected_Data_TB_21, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
PCA_TB_22<-autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_19, data=CWM_Collected_Data_FK_19, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_20, data=CWM_Collected_Data_FK_20, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_21, data=CWM_Collected_Data_FK_21, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_22, data=CWM_Collected_Data_FK_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_TB_19, data=CWM_Collected_Data_TB_19, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_TB_20, data=CWM_Collected_Data_TB_20, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_TB_21, data=CWM_Collected_Data_TB_21, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_20, data=CWM_Collected_Data_FK_20, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_21, data=CWM_Collected_Data_FK_21, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
autoplot(PCA_FK_22, data=CWM_Collected_Data_FK_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="Trtm")
colnames(PCA_TB_22)
colnames(CWM_Collected_Data_TB_22)
autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="Trtm", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="grazing_treatment")
autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="grazing_treatment", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="grazing_treatment")
autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="grazing_treatment", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="grazing_treatment")
esc
autoplot(PCA_TB_22, data=CWM_Collected_Data_TB_22, scale=0, colour="grazing_treatment", loadings=TRUE, loadings.colour="black", size=3, loadings.label=TRUE, loadings.label.colour="black", loadings.label.size=6, frame=T, frame.colour="grazing_treatment")
